//PORTUGUES
PrimeFaces.locales['pt'] = {
	closeText : 'Fechar',
	prevText : 'Anterior',
	nextText : 'Próximo',
	currentText : 'Começo',
	monthNames : [ 'Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho',
			'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro' ],
	monthNamesShort : [ 'Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago',
			'Set', 'Out', 'Nov', 'Des' ],
	dayNames : [ 'Domingo', 'Segunda', 'Ter�a', 'Quarta', 'Quinta', 'Sexta',
			'Sábado' ],
	dayNamesShort : [ 'Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb' ],
	dayNamesMin : [ 'D', 'S', 'T', 'Q', 'Q', 'S', 'S' ],
	weekHeader : 'Semana',
	firstDay : 1,
	isRTL : false,
	showMonthAfterYear : false,
	yearSuffix : '',
	timeOnlyTitle : 'Só Horas',
	timeText : 'Tempo',
	hourText : 'Hora',
	minuteText : 'Minuto',
	secondText : 'Segundo',
	currentText : 'Data Atual',
	ampm : false,
	month : 'Mês',
	week : 'Semana',
	day : 'Dia',
	allDayText : 'Todo Dia'
};

// INGLES
PrimeFaces.locales['en_US'] = {
	closeText : 'Close',
	prevText : 'Previous',
	nextText : 'Next',
	monthNames : [ 'January', 'February', 'March', 'April', 'May', 'June',
			'July', 'August', 'September', 'October', 'November', 'December' ],
	monthNamesShort : [ 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug',
			'Sep', 'Oct', 'Nov', 'Dec' ],
	dayNames : [ 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday',
			'Friday', 'Saturday' ],
	dayNamesShort : [ 'Sun', 'Mon', 'Tue', 'Wed', 'Tue', 'Fri', 'Sat' ],
	dayNamesMin : [ 'S', 'M', 'T', 'W ', 'T', 'F ', 'S' ],
	weekHeader : 'Week',
	firstDay : 1,
	isRTL : false,
	showMonthAfterYear : false,
	yearSuffix : '',
	timeOnlyTitle : 'Only Time',
	timeText : 'Time',
	hourText : 'Time',
	minuteText : 'Minute',
	secondText : 'Second',
	currentText : 'Current Date',
	ampm : false,
	month : 'Month',
	week : 'week',
	day : 'Day',
	allDayText : 'All Day',
	messages : {
		'javax.faces.component.UIInput.REQUIRED' : '{0}: Validation Error: Value is required.',
		'javax.faces.converter.IntegerConverter.INTEGER' : '{2}: \'{0}\' must be a number consisting of one or more digits.',
		'javax.faces.converter.IntegerConverter.INTEGER_detail' : '{2}: \'{0}\' must be a number between -2147483648 and 2147483647 Example: {1}',
		'javax.faces.converter.DoubleConverter.DOUBLE' : '{2}: \'{0}\' must be a number consisting of one or more digits.',
		'javax.faces.converter.DoubleConverter.DOUBLE_detail' : '{2}: \'{0}\' must be a number between 4.9E-324 and 1.7976931348623157E308  Example: {1}',
		'javax.faces.converter.BigDecimalConverter.DECIMAL' : '{2}: \'{0}\' must be a signed decimal number.',
		'javax.faces.converter.BigDecimalConverter.DECIMAL_detail' : '{2}: \'{0}\' must be a signed decimal number consisting of zero or more digits, that may be followed by a decimal point and fraction.  Example: {1}',
		'javax.faces.converter.BigIntegerConverter.BIGINTEGER' : '{2}: \'{0}\' must be a number consisting of one or more digits.',
		'javax.faces.converter.BigIntegerConverter.BIGINTEGER_detail' : '{2}: \'{0}\' must be a number consisting of one or more digits. Example: {1}',
		'javax.faces.converter.ByteConverter.BYTE' : '{2}: \'{0}\' must be a number between 0 and 255.',
		'javax.faces.converter.ByteConverter.BYTE_detail' : '{2}: \'{0}\' must be a number between 0 and 255.  Example: {1}',
		'javax.faces.converter.CharacterConverter.CHARACTER' : '{1}: \'{0}\' must be a valid character.',
		'javax.faces.converter.CharacterConverter.CHARACTER_detail' : '{1}: \'{0}\' must be a valid ASCII character.',
		'javax.faces.converter.ShortConverter.SHORT' : '{2}: \'{0}\' must be a number consisting of one or more digits.',
		'javax.faces.converter.ShortConverter.SHORT_detail' : '{2}: \'{0}\' must be a number between -32768 and 32767 Example: {1}',
		'javax.faces.converter.BooleanConverter.BOOLEAN' : '{1}: \'{0}\' must be \'true\' or \'false\'',
		'javax.faces.converter.BooleanConverter.BOOLEAN_detail' : '{1}: \'{0}\' must be \'true\' or \'false\'.  Any value other than \'true\' will evaluate to \'false\'.',
		'javax.faces.validator.LongRangeValidator.MAXIMUM' : '{1}: Validation Error: Value is greater than allowable maximum of \'{0}\'',
		'javax.faces.validator.LongRangeValidator.MINIMUM' : '{1}: Validation Error: Value is less than allowable minimum of \'{0}\'',
		'javax.faces.validator.LongRangeValidator.NOT_IN_RANGE' : '{2}: Validation Error: Specified attribute is not between the expected values of {0} and {1}.',
		'javax.faces.validator.LongRangeValidator.TYPE={0}' : 'Validation Error: Value is not of the correct type.',
		'javax.faces.validator.DoubleRangeValidator.MAXIMUM' : '{1}: Validation Error: Value is greater than allowable maximum of \'{0}\'',
		'javax.faces.validator.DoubleRangeValidator.MINIMUM' : '{1}: Validation Error: Value is less than allowable minimum of \'{0}\'',
		'javax.faces.validator.DoubleRangeValidator.NOT_IN_RANGE' : '{2}: Validation Error: Specified attribute is not between the expected values of {0} and {1}',
		'javax.faces.validator.DoubleRangeValidator.TYPE={0}' : 'Validation Error: Value is not of the correct type',
		'javax.faces.converter.FloatConverter.FLOAT' : '{2}: \'{0}\' must be a number consisting of one or more digits.',
		'javax.faces.converter.FloatConverter.FLOAT_detail' : '{2}: \'{0}\' must be a number between 1.4E-45 and 3.4028235E38  Example: {1}',
		'javax.faces.converter.DateTimeConverter.DATE' : '{2}: \'{0}\' could not be understood as a date.',
		'javax.faces.converter.DateTimeConverter.DATE_detail' : '{2}: \'{0}\' could not be understood as a date. Example: {1}',
		'javax.faces.converter.DateTimeConverter.TIME' : '{2}: \'{0}\' could not be understood as a time.',
		'javax.faces.converter.DateTimeConverter.TIME_detail' : '{2}: \'{0}\' could not be understood as a time. Example: {1}',
		'javax.faces.converter.DateTimeConverter.DATETIME' : '{2}: \'{0}\' could not be understood as a date and time.',
		'javax.faces.converter.DateTimeConverter.DATETIME_detail' : '{2}: \'{0}\' could not be understood as a date and time. Example: {1}',
		'javax.faces.converter.DateTimeConverter.PATTERN_TYPE' : '{1}: A \'pattern\' or \'type\' attribute must be specified to convert the value \'{0}\'',
		'javax.faces.converter.NumberConverter.CURRENCY' : '{2}: \'{0}\' could not be understood as a currency value.',
		'javax.faces.converter.NumberConverter.CURRENCY_detail' : '{2}: \'{0}\' could not be understood as a currency value. Example: {1}',
		'javax.faces.converter.NumberConverter.PERCENT' : '{2}: \'{0}\' could not be understood as a percentage.',
		'javax.faces.converter.NumberConverter.PERCENT_detail' : '{2}: \'{0}\' could not be understood as a percentage. Example: {1}',
		'javax.faces.converter.NumberConverter.NUMBER' : '{2}: \'{0}\' could not be understood as a date.',
		'javax.faces.converter.NumberConverter.NUMBER_detail' : '{2}: \'{0}\' is not a number. Example: {1}',
		'javax.faces.converter.NumberConverter.PATTERN' : '{2}: \'{0}\' is not a number pattern.',
		'javax.faces.converter.NumberConverter.PATTERN_detail' : '{2}: \'{0}\' is not a number pattern. Example: {1}',
		'javax.faces.validator.LengthValidator.MINIMUM' : '{1}: Validation Error: Length is less than allowable minimum of \'{0}\'',
		'javax.faces.validator.LengthValidator.MAXIMUM' : '{1}: Validation Error: Length is greater than allowable maximum of \'{0}\'',
		'javax.faces.validator.RegexValidator.PATTERN_NOT_SET' : 'Regex pattern must be set.',
		'javax.faces.validator.RegexValidator.PATTERN_NOT_SET_detail' : 'Regex pattern must be set to non-empty value.',
		'javax.faces.validator.RegexValidator.NOT_MATCHED' : 'Regex Pattern not matched',
		'javax.faces.validator.RegexValidator.NOT_MATCHED_detail' : 'Regex pattern of \'{0}\' not matched',
		'javax.faces.validator.RegexValidator.MATCH_EXCEPTION' : 'Error in regular expression.',
		'javax.faces.validator.RegexValidator.MATCH_EXCEPTION_detail' : 'Error in regular expression, \'{0}\''
	}
};

// FRANCES
PrimeFaces.locales['fr'] = {
	closeText : 'Fermer',
	prevText : 'Précédent',
	nextText : 'Suivant',
	monthNames : [ 'Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin',
			'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre' ],
	monthNamesShort : [ 'Jan', 'Fév', 'Mar', 'Avr', 'Mai', 'Jun', 'Jul', 'Aoû',
			'Sep', 'Oct', 'Nov', 'Déc' ],
	dayNames : [ 'Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi',
			'Samedi' ],
	dayNamesShort : [ 'Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam' ],
	dayNamesMin : [ 'D', 'L', 'M', 'M', 'J', 'V', 'S' ],
	weekHeader : 'Semaine',
	firstDay : 1,
	isRTL : false,
	showMonthAfterYear : false,
	yearSuffix : '',
	timeOnlyTitle : 'Choisir l\'heure',
	timeText : 'Heure',
	hourText : 'Heures',
	minuteText : 'Minutes',
	secondText : 'Secondes',
	currentText : 'Maintenant',
	ampm : false,
	month : 'Mois',
	week : 'Semaine',
	day : 'Jour',
	allDayText : 'Toute la journée'
};

// ITALIANO
PrimeFaces.locales['it'] = {
	closeText : 'Chiudi',
	prevText : 'Precedente',
	nextText : 'Prossimo',
	monthNames : [ 'Gennaio', 'Febbraio', 'Marzo', 'Aprile', 'Maggio',
			'Giugno', 'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre',
			'Dicembre' ],
	monthNamesShort : [ 'Gen', 'Feb', 'Mar', 'Apr', 'Mag', 'Giu', 'Lug', 'Ago',
			'Set', 'Ott', 'Nov', 'Dic' ],
	dayNames : [ 'Domenica', 'Lunedì', 'Martedì', 'Mercoledì', 'Giovedì',
			'Venerdì', 'Sabato' ],
	dayNamesShort : [ 'Dom', 'Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab' ],
	dayNamesMin : [ 'D', 'L', 'M', 'M ', 'G', 'V ', 'S' ],
	weekHeader : 'Sett',
	firstDay : 1,
	isRTL : false,
	showMonthAfterYear : false,
	yearSuffix : '',
	timeOnlyTitle : 'Solo Tempo',
	timeText : 'Ora',
	hourText : 'Ore',
	minuteText : 'Minuto',
	secondText : 'Secondo',
	currentText : 'Data Odierna',
	ampm : false,
	month : 'Mese',
	week : 'Settimana',
	day : 'Giorno',
	allDayText : 'Tutto il Giorno'
};
//
ESPANHOL
PrimeFaces.locales['es'] = {
	closeText : 'Cerrar',
	prevText : 'Anterior',
	nextText : 'Siguiente',
	monthNames : [ 'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
			'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre',
			'Diciembre' ],
	monthNamesShort : [ 'Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago',
			'Sep', 'Oct', 'Nov', 'Dic' ],
	dayNames : [ 'Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves',
			'Viernes', 'Sábado' ],
	dayNamesShort : [ 'Dom', 'Lun', 'Mar', 'Mie', 'Jue', 'Vie', 'Sab' ],
	dayNamesMin : [ 'D', 'L', 'M', 'X', 'J', 'V', 'S' ],
	weekHeader : 'Semana',
	firstDay : 1,
	isRTL : false,
	showMonthAfterYear : false,
	yearSuffix : '',
	timeOnlyTitle : 'Sólo hora',
	timeText : 'Tiempo',
	hourText : 'Hora',
	minuteText : 'Minuto',
	secondText : 'Segundo',
	currentText : 'Fecha actual',
	ampm : false,
	month : 'Mes',
	week : 'Semana',
	day : 'Día',
	allDayText : 'Todo el día'
};